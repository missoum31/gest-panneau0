//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par wsdl, Version=4.0.30319.17929.
// 
namespace anep {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceStocksSoap", Namespace="http://tempuri.org/")]
    public partial class ServiceStocks : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback AjouterMouvementStockOperationCompleted;
        
        /// <remarks/>
        public ServiceStocks() {
            this.Url = "http://localhost:54247/webService.asmx";

        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        /// <remarks/>
        public event AjouterMouvementStockCompletedEventHandler AjouterMouvementStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AjouterMouvementStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AjouterMouvementStock(int panneauID, int ClientID, int annee, int mois, int jour, int nombreFace, int Duree, int Montant) {
            object[] results = this.Invoke("AjouterMouvementStock", new object[] {
                        panneauID,
                        ClientID,
                        annee,
                        mois,
                        jour,
                        nombreFace,
                        Duree,
                        Montant});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAjouterMouvementStock(int panneauID, int ClientID, int annee, int mois, int jour, int nombreFace, int Duree, int Montant, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AjouterMouvementStock", new object[] {
                        panneauID,
                        ClientID,
                        annee,
                        mois,
                        jour,
                        nombreFace,
                        Duree,
                        Montant}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAjouterMouvementStock(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AjouterMouvementStockAsync(int panneauID, int ClientID, int annee, int mois, int jour, int nombreFace, int Duree, int Montant) {
            this.AjouterMouvementStockAsync(panneauID, ClientID, annee, mois, jour, nombreFace, Duree, Montant, null);
        }
        
        /// <remarks/>
        public void AjouterMouvementStockAsync(int panneauID, int ClientID, int annee, int mois, int jour, int nombreFace, int Duree, int Montant, object userState) {
            if ((this.AjouterMouvementStockOperationCompleted == null)) {
                this.AjouterMouvementStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAjouterMouvementStockOperationCompleted);
            }
            this.InvokeAsync("AjouterMouvementStock", new object[] {
                        panneauID,
                        ClientID,
                        annee,
                        mois,
                        jour,
                        nombreFace,
                        Duree,
                        Montant}, this.AjouterMouvementStockOperationCompleted, userState);
        }
        
        private void OnAjouterMouvementStockOperationCompleted(object arg) {
            if ((this.AjouterMouvementStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AjouterMouvementStockCompleted(this, new AjouterMouvementStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void AjouterMouvementStockCompletedEventHandler(object sender, AjouterMouvementStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AjouterMouvementStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AjouterMouvementStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
